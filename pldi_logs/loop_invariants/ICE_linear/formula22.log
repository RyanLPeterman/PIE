 ==>
6400 tests for loop #1.

(*) Checking loop invariant:
================================================================================
[#] Starting Loop Invariant Generation ...

   + Found guard in B11 for loop #1

     - post_1 : (((true & ((x1 <= x2) & ((x2 >= 0) | ((x2 - x3) <= 2)))) | (!(x1 <= x2))) & ((true & ((x1 <= x2) & ((x2 >= 0) | ((x2 - x3) <= 2)))) | (x1 <= x2)))
     - guard : (input != 0)

   [Q1] Abduction query = ((input != 0) | (((true & ((x1 <= x2) & ((x2 >= 0) | ((x2 - x3) <= 2)))) | (!(x1 <= x2))) & ((true & ((x1 <= x2) & ((x2 >= 0) | ((x2 - x3) <= 2)))) | (x1 <= x2))))
   [#] Simplified query: ((input != 0) | (((true & ((x1 <= x2) & ((x2 >= 0) | ((x2 - x3) <= 2)))) | (!(x1 <= x2))) & ((true & ((x1 <= x2) & ((x2 >= 0) | ((x2 - x3) <= 2)))) | (x1 <= x2))))

    [%] Inferring {true} [k = 1] (0f x 6400t) ...                                     
    [?] Verifying [k = 1] --- true                            
      [+] Added test ... [ 0, 1, 0, 0 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (3f x 6401t) ...                                     
    [%] Inferring {true} [k = 2] (3f x 6401t) ...                                     
    [%] Inferring {true} [k = 3] (3f x 6401t) ...                                     
    [?] Verifying [k = 3] --- ((x2 > 2) | (1 > x1) | (2 = x2))                            
      [+] Added test ... [ 0, 3, 2, 0 ]

    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (4f x 6402t) ...                                     
    [%] Inferring {true} [k = 2] (4f x 6402t) ...                                     
    [%] Inferring {true} [k = 3] (4f x 6402t) ...                                     
    [?] Verifying [k = 3] --- ((x2 > 2) | (2 = x2) | !((x1 = 1))) & ((1 > x1) | !((2 = x2)) | (x1 = 1))                            
      [+] Added test ... [ 0, 0, -1, 0 ]

    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (5f x 6403t) ...                                     
    [?] Verifying [k = 1] --- (x1 <= x2)                            
      [+] Added test ... [ 0, -1, -1, -4 ]

    [%] Removing conflicts ...  @2 @3 @4
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (7f x 6404t) ...                                     
    [%] Inferring {true} [k = 2] (7f x 6404t) ...                                     
    [%] Inferring {true} [k = 3] (7f x 6404t) ...                                     
    [?] Verifying [k = 3] --- ((x2 > 2) | (! (0 = input)) | (x3 > x2)) & (x1 <= x2)                            

     - Result = ((((x2 > 2) | (!(0 = input))) | (x3 > x2)) & (x1 <= x2))

   # Loop_1 | Invariant @ Postcondition: ((((x2 > 2) | (!(0 = input))) | (x3 > x2)) & (x1 <= x2))

   # Loop_1 | Inductive Check: ((!((((x2 > 2) | (!(0 = input))) | (x3 > x2)) & (x1 <= x2))) | (!(input != 0)) | ((((((x2 > 2) | (!(0 = input))) | (x3 > x2)) & (x1 <= x2)) | (!(x1p <= x2p))) & (((((x2 > 2) | (!(0 = input))) | (x3 > x2)) & (x1 <= x2)) | (x1p <= x2p)))) is valid!

   # Precondition Check: ((((0 > 2) | (!(0 = input))) | (0 > 0)) & (0 <= 0))    [+] Root state for counter-examples : {'x3p': '-', 'x2': '-', 'input': '0', 'x1p': '-', 'x3': '-', 'x1': '-', 'x2p': '-'}
 is not valid!

----------------------------------< RESTART >-----------------------------------

   + Found guard in B11 for loop #1

     - post_1 : (((true & ((x1 <= x2) & ((x2 >= 0) | ((x2 - x3) <= 2)))) | (!(x1 <= x2))) & ((true & ((x1 <= x2) & ((x2 >= 0) | ((x2 - x3) <= 2)))) | (x1 <= x2)))
     - guard : (input != 0)

   [Q2] Abduction query = ((input != 0) | (((true & ((x1 <= x2) & ((x2 >= 0) | ((x2 - x3) <= 2)))) | (!(x1 <= x2))) & ((true & ((x1 <= x2) & ((x2 >= 0) | ((x2 - x3) <= 2)))) | (x1 <= x2))))
   [#] Simplified query: ((input != 0) | (((true & ((x1 <= x2) & ((x2 >= 0) | ((x2 - x3) <= 2)))) | (!(x1 <= x2))) & ((true & ((x1 <= x2) & ((x2 >= 0) | ((x2 - x3) <= 2)))) | (x1 <= x2))))

    [%] Inferring {true} [k = 1] (0f x 6401t) ...                                     
    [?] Verifying [k = 1] --- true                            
      [+] Added test ... [ 0, 1, 0, 0 ]

    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (1f x 6402t) ...                                     
    [?] Verifying [k = 1] --- (x1 <= x2)                            
      [+] Added test ... [ 0, -1, -1, -4 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3 @4
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (4f x 6403t) ...                                     
    [%] Inferring {true} [k = 2] (4f x 6403t) ...                                     
    [%] Inferring {true} [k = 3] (4f x 6403t) ...                                     
    [?] Verifying [k = 3] --- ((0 <= x2) | (! (0 = input)) | (x3 > x2)) & (x1 <= x2)                            

     - Result = ((((0 <= x2) | (!(0 = input))) | (x3 > x2)) & (x1 <= x2))

   # Loop_1 | Invariant @ Postcondition: ((((0 <= x2) | (!(0 = input))) | (x3 > x2)) & (x1 <= x2))

   # Loop_1 | Inductive Check: ((!((((0 <= x2) | (!(0 = input))) | (x3 > x2)) & (x1 <= x2))) | (!(input != 0)) | ((((((0 <= x2) | (!(0 = input))) | (x3 > x2)) & (x1 <= x2)) | (!(x1p <= x2p))) & (((((0 <= x2) | (!(0 = input))) | (x3 > x2)) & (x1 <= x2)) | (x1p <= x2p)))) is valid!

   # Precondition Check: ((((0 <= 0) | (!(0 = input))) | (0 > 0)) & (0 <= 0)) is valid!


[###] Final invariants: [###]
Loop #1: ((((0 <= x2) | (!(0 = input))) | (x3 > x2)) & (x1 <= x2))
================================================================================
checker_exec.sh: line 1: 18273 Aborted                 (core dumped) bin/pinvgen -wpath /home/saswat/Repos/PIE/logs/limit_8gb/6400/pie/16/formula22.cpp -abducer /home/saswat/Repos/PIE/abducer/abduce.sh -tool=pie -csize 16 --extra-arg=--std=c++11 /home/saswat/Repos/PIE/abducer/../bm_ice/formula22.cpp --

real	0m24.689s
user	0m22.684s
sys	0m0.320s


--- Processed formula22.cpp ---
sat: 7
unsat: 5
unk: 0
escher: 11

[$] OOM Count = 0
[$] MAX Usage = 132
