 ==>
6400 tests for loop #1.
6400 tests for loop #2.

(*) Checking loop invariant:
================================================================================
[#] Starting Loop Invariant Generation ...

   + Found guard in B6 for loop #2

     - post_2 : (((true & (a = b)) | (!(flag != 0))) & (true | (flag != 0)))
     - guard : NON-DETERMINISTIC

   [Q1] Abduction query = (false | (((true & (a = b)) | (!(flag != 0))) & (true | (flag != 0))))
   [#] Simplified query: (false | (((true & (a = b)) | (!(flag != 0))) & (true | (flag != 0))))

    [%] Inferring {true} [k = 1] (0f x 6400t) ...                                     
    [?] Verifying [k = 1] --- true                            
      [+] Added test ... [ -1, 0, -1 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (2f x 6401t) ...                                     
    [%] Inferring {true} [k = 2] (2f x 6401t) ...                                     
    [?] Verifying [k = 2] --- ((b = a) | (0 = flag))                            

     - Result = ((b = a) | (0 = flag))

   # Loop_2 | Invariant @ Postcondition: ((b = a) | (0 = flag))

   # Loop_2 | Inductive Check: ((!((b = a) | (0 = flag))) | false | (((b + (j - i)) = (a + 1)) | (0 = flag))) is not valid!

   [Q2] Abduction query = ((!((b = a) | (0 = flag))) | false | (((b + (j - i)) = (a + 1)) | (0 = flag)))
   [#] Simplified query: ((!((b = a) | (0 = flag))) | false | (((b + (j - i)) = (a + 1)) | (0 = flag)))

    [%] Inferring {true} [k = 1] (0f x 6400t) ...                                     
    [?] Verifying [k = 1] --- true                            
      [+] Added test ... [ 0, 0, -1, 0, 0 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (2f x 6401t) ...                                     
    [%] Inferring {true} [k = 2] (2f x 6401t) ...                                     
    [?] Verifying [k = 2] --- ((j > i) | (0 = flag))                            
      [+] Added test ... [ 0, 0, -1, 0, -2 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (4f x 6402t) ...                                     
    [%] Inferring {true} [k = 2] (4f x 6402t) ...                                     
    [?] Verifying [k = 2] --- ((j > 1) | (1 = j))                            
      [+] Added test ... [ 0, 0, -1, 2, 0 ]

    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (5f x 6403t) ...                                     
    [%] Inferring {true} [k = 2] (5f x 6403t) ...                                     
    [?] Verifying [k = 2] --- ((1 = j) | (i > 1))                            
      [+] Added test ... [ 0, 0, -1, 1, -1 ]

    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (6f x 6404t) ...                                     
    [%] Inferring {true} [k = 2] (6f x 6404t) ...                                     
    [?] Verifying [k = 2] --- ((i > 1) | (0 = i)) & ((1 = j) | (i > 1))                            
      [+] Added test ... [ 0, 0, -1, 1, 2 ]

    [%] Inferring {true} [k = 1] (6f x 6405t) ...                                     
    [%] Inferring {true} [k = 2] (6f x 6405t) ...                                     
    [?] Verifying [k = 2] --- (!((1 = j)) | (0 = i)) & ((1 = j) | (i > 1))                            
      [+] Added test ... [ 0, 0, -1, 0, 2 ]

    [%] Inferring {true} [k = 1] (6f x 6406t) ...                                     
    [%] Inferring {true} [k = 2] (6f x 6406t) ...                                     
    [?] Verifying [k = 2] --- ((1 = j) | !((0 = i))) & ((j > 1) | (0 = i))                            
      [+] Added test ... [ 0, 0, -1, 2, -1 ]

    [%] Inferring {true} [k = 1] (6f x 6407t) ...                                     
    [%] Inferring {true} [k = 2] (6f x 6407t) ...                                     
    [?] Verifying [k = 2] --- ((j > 1) | (0 = i)) & ((1 = j) | (i > 1))                            
      [+] Added test ... [ 0, 0, -1, 2, 2 ]

    [%] Inferring {true} [k = 1] (6f x 6408t) ...                                     
    [%] Inferring {true} [k = 2] (6f x 6408t) ...                                     
    [?] Verifying [k = 2] --- ((j > i) | (0 = flag)) & ((j > 1) | (0 = i)) & ((1 = j) | (i > 1))                            
      [+] Added test ... [ 0, 0, -1, 4, 2 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3 @4
    [%] Inferring {true} [k = 1] (8f x 6409t) ...                                     
    [%] Inferring {true} [k = 2] (8f x 6409t) ...                                     
    [?] Verifying [k = 2] --- ((0 = flag) | (j = (i + 1)))                            

     - Result = ((0 = flag) | (j = (i + 1)))

   # Loop_2 | Invariant @ Inductive Condition: (((0 = flag) | (j = (i + 1))) & ((b = a) | (0 = flag)))

   # Loop_2 | Inductive Check: ((!(((0 = flag) | (j = (i + 1))) & ((b = a) | (0 = flag)))) | false | (((0 = flag) | (j = (i + 1))) & (((b + (j - i)) = (a + 1)) | (0 = flag)))) is valid!

   + Found guard in B12 for loop #1

     - post_1 : (((0 = flag) | (j = (i + 1))) & ((0 = 0) | (0 = flag)))
     - guard : NON-DETERMINISTIC

   [Q3] Abduction query = (false | (((0 = flag) | (j = (i + 1))) & ((0 = 0) | (0 = flag))))
   [#] Simplified query: (false | (((0 = flag) | (j = (i + 1))) & ((0 = 0) | (0 = flag))))

    [%] Inferring {true} [k = 1] (0f x 6400t) ...                                     
    [?] Verifying [k = 1] --- true                            
      [+] Added test ... [ -1, 0, 0 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (2f x 6401t) ...                                     
    [%] Inferring {true} [k = 2] (2f x 6401t) ...                                     
    [?] Verifying [k = 2] --- ((j > i) | (0 = flag))                            
      [+] Added test ... [ -1, 0, -2 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (4f x 6402t) ...                                     
    [%] Inferring {true} [k = 2] (4f x 6402t) ...                                     
    [?] Verifying [k = 2] --- ((j > 1) | (1 = j))                            
      [+] Added test ... [ -1, 2, 0 ]

    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (5f x 6403t) ...                                     
    [%] Inferring {true} [k = 2] (5f x 6403t) ...                                     
    [?] Verifying [k = 2] --- ((1 = j) | (i > 1))                            
      [+] Added test ... [ -1, 1, -1 ]

    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (6f x 6404t) ...                                     
    [%] Inferring {true} [k = 2] (6f x 6404t) ...                                     
    [%] Inferring {true} [k = 3] (6f x 6404t) ...                                     
    [?] Verifying [k = 3] --- ((0 = flag) | (i > 1) | (0 = i)) & ((1 = j) | (i > 1))                            
      [+] Added test ... [ -1, 1, 2 ]

    [%] Inferring {true} [k = 1] (6f x 6405t) ...                                     
    [%] Inferring {true} [k = 2] (6f x 6405t) ...                                     
    [%] Inferring {true} [k = 3] (6f x 6405t) ...                                     
    [?] Verifying [k = 3] --- ((0 = flag) | !((1 = j)) | (0 = i)) & ((1 = j) | (i > 1))                            
      [+] Added test ... [ -1, 4, 2 ]

    [%] Removing conflicts ...  @2 @3 @4
    [%] Inferring {true} [k = 1] (7f x 6406t) ...                                     
    [%] Inferring {true} [k = 2] (7f x 6406t) ...                                     
    [?] Verifying [k = 2] --- ((0 = flag) | (j = (i + 1)))                            

     - Result = ((0 = flag) | (j = (i + 1)))

   # Loop_1 | Invariant @ Postcondition: ((0 = flag) | (j = (i + 1)))

   # Loop_1 | Inductive Check: ((!((0 = flag) | (j = (i + 1)))) | false | ((((0 = flag) | ((j + 2) = ((i + 2) + 1))) | (!(((i + 2) % 2) = 0))) & (((0 = flag) | ((j + 1) = ((i + 2) + 1))) | (((i + 2) % 2) = 0)))) is not valid!

   [Q4] Abduction query = ((!((0 = flag) | (j = (i + 1)))) | false | ((((0 = flag) | ((j + 2) = ((i + 2) + 1))) | (!(((i + 2) % 2) = 0))) & (((0 = flag) | ((j + 1) = ((i + 2) + 1))) | (((i + 2) % 2) = 0))))
   [#] Simplified query: ((!((0 = flag) | (j = (i + 1)))) | false | ((((0 = flag) | ((j + 2) = ((i + 2) + 1))) | (!(((i + 2) % 2) = 0))) & (((0 = flag) | ((j + 1) = ((i + 2) + 1))) | (((i + 2) % 2) = 0))))

    [%] Inferring {true} [k = 1] (0f x 6400t) ...                                     
    [?] Verifying [k = 1] --- true                            
      [+] Added test ... [ -1, 0, -1 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (2f x 6401t) ...                                     
    [%] Inferring {true} [k = 2] (2f x 6401t) ...                                     
    [?] Verifying [k = 2] --- ((j > 2) | (1 = j))                            
      [+] Added test ... [ -1, 4, 3 ]

    [%] Removing conflicts ...  @2 @3 @4
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (4f x 6402t) ...                                     
    [%] Inferring {true} [k = 2] (4f x 6402t) ...                                     
    [%] Inferring {true} [k = 3] (4f x 6402t) ...                                     
    [?] Verifying [k = 3] --- ((1 = j) | (i > (2 + 1)) | (i = 2))                            
      [+] Added test ... [ -1, 6, 5 ]

    [%] Removing conflicts ...  @2 @3 @4 @5
    [%] Removing conflicts ...  @2 @3 @4 @5
    [%] Inferring {true} [k = 1] (6f x 6403t) ...                                     
    [%] Inferring {true} [k = 2] (6f x 6403t) ...                                     
    [?] Verifying [k = 2] --- ((! (flag = (0 - 1))) | (1 = (j % 2)))                            
      [+] Added test ... [ -2, 0, -1 ]

    [%] Inferring {true} [k = 1] (6f x 6404t) ...                                     
    [%] Inferring {true} [k = 2] (6f x 6404t) ...                                     
    [?] Verifying [k = 2] --- ((i > (2 + 1)) | (1 = (j % 2))) & ((! (flag = (0 - 1))) | (1 = (j % 2)))                            
      [+] Added test ... [ -2, 6, 5 ]

    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (7f x 6405t) ...                                     
    [%] Inferring {true} [k = 2] (7f x 6405t) ...                                     
    [?] Verifying [k = 2] --- ((1 = (j % 2)) | (0 = flag))                            

     - Result = ((1 = (j % 2)) | (0 = flag))

   # Loop_1 | Invariant @ Inductive Condition: (((1 = (j % 2)) | (0 = flag)) & ((0 = flag) | (j = (i + 1))))

   # Loop_1 | Inductive Check: ((!(((1 = (j % 2)) | (0 = flag)) & ((0 = flag) | (j = (i + 1))))) | false | (((((1 = ((j + 2) % 2)) | (0 = flag)) & ((0 = flag) | ((j + 2) = ((i + 2) + 1)))) | (!(((i + 2) % 2) = 0))) & ((((1 = ((j + 1) % 2)) | (0 = flag)) & ((0 = flag) | ((j + 1) = ((i + 2) + 1)))) | (((i + 2) % 2) = 0)))) is valid!

   # Precondition Check: (((((1 = (1 % 2)) | (0 = flag)) & ((0 = flag) | (1 = (0 + 1)))) | (!(flag != 0))) & ((((1 = (1 % 2)) | (0 = flag)) & ((0 = flag) | (1 = (1 + 1)))) | (flag != 0))) is valid!


[###] Final invariants: [###]
Loop #1: (((1 = (j % 2)) | (0 = flag)) & ((0 = flag) | (j = (i + 1))))
Loop #2: (((0 = flag) | (j = (i + 1))) & ((b = a) | (0 = flag)))
================================================================================
checker_exec.sh: line 1: 10695 Aborted                 (core dumped) bin/pinvgen -wpath /home/saswat/Repos/PIE/logs/limit_8gb/6400/pie/16/40.cpp -abducer /home/saswat/Repos/PIE/abducer/abduce.sh -tool=pie -csize 16 --extra-arg=--std=c++11 ../../PIE/bm_hola/40.cpp --

real	0m40.236s
user	0m36.964s
sys	0m0.712s


--- Processed 40.cpp ---
sat: 23
unsat: 7
unk: 0
escher: 24

[$] OOM Count = 0
[$] MAX Usage = 140
