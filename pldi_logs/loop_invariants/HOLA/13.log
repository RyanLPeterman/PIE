 ==>
6400 tests for loop #1.

(*) Checking loop invariant:
================================================================================
[#] Starting Loop Invariant Generation ...

   + Found guard in B8 for loop #1

     - post_1 : (((true & (j = ((2 * k) + 2))) | (!(k != 0))) & (true | (k != 0)))
     - guard : NON-DETERMINISTIC

   [Q1] Abduction query = (false | (((true & (j = ((2 * k) + 2))) | (!(k != 0))) & (true | (k != 0))))
   [#] Simplified query: (false | (((true & (j = ((2 * k) + 2))) | (!(k != 0))) & (true | (k != 0))))

    [%] Inferring {true} [k = 1] (0f x 6400t) ...                                     
    [?] Verifying [k = 1] --- true                            
      [+] Added test ... [ -1, -1 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (2f x 6401t) ...                                     
    [?] Verifying [k = 1] --- (j > k)                            
      [+] Added test ... [ -1, -2 ]

    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (3f x 6402t) ...                                     
    [%] Inferring {true} [k = 2] (3f x 6402t) ...                                     
    [?] Verifying [k = 2] --- ((0 = k) | (j > 2))                            
      [+] Added test ... [ 3, -1 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (5f x 6403t) ...                                     
    [%] Inferring {true} [k = 2] (5f x 6403t) ...                                     
    [%] Inferring {true} [k = 3] (5f x 6403t) ...                                     
    [?] Verifying [k = 3] --- ((0 = k) | (k > 1) | (1 = k))                            
      [+] Added test ... [ 0, 1 ]

    [%] Inferring {true} [k = 1] (5f x 6404t) ...                                     
    [%] Inferring {true} [k = 2] (5f x 6404t) ...                                     
    [%] Inferring {true} [k = 3] (5f x 6404t) ...                                     
    [?] Verifying [k = 3] --- ((0 = k) | (k > 1) | (1 = k)) & ((0 = k) | (j > 2))                            
      [+] Added test ... [ 3, 1 ]

    [%] Removing conflicts ...  @2 @3 @4
    [%] Inferring {true} [k = 1] (6f x 6405t) ...                                     
    [%] Inferring {true} [k = 2] (6f x 6405t) ...                                     
    [?] Verifying [k = 2] --- ((0 = k) | (j > (2 + 1)))                            
      [+] Added test ... [ 4, -1 ]

    [%] Inferring {true} [k = 1] (6f x 6406t) ...                                     
    [%] Inferring {true} [k = 2] (6f x 6406t) ...                                     
    [%] Inferring {true} [k = 3] (6f x 6406t) ...                                     
    [?] Verifying [k = 3] --- ((0 = k) | (k > 1) | (1 = k)) & ((0 = k) | (j > (2 + 1)))                            
      [+] Added test ... [ 5, 1 ]

    [%] Removing conflicts ...  @2 @3 @4 @5
    [%] Inferring {true} [k = 1] (7f x 6407t) ...                                     
    [%] Inferring {true} [k = 2] (7f x 6407t) ...                                     
    [?] Verifying [k = 2] --- (!((1 = k)) | (j = ((2 + 1) + 1))) & ((1 = k) | !((j = ((2 + 1) + 1)))) & ((0 = k) | (j > (2 + 1)))                            
      [+] Added test ... [ 5, -1 ]

    [%] Inferring {true} [k = 1] (7f x 6408t) ...                                     
    [%] Inferring {true} [k = 2] (7f x 6408t) ...                                     
    [%] Inferring {true} [k = 3] (7f x 6408t) ...                                     
    [?] Verifying [k = 3] --- ((1 = k) | !((j = ((2 + 1) + 1)))) & ((0 = k) | (k > 1) | (j = ((2 + 1) + 1)))                            
      [+] Added test ... [ 3, 2 ]

    [%] Inferring {true} [k = 1] (7f x 6409t) ...                                     
    [%] Inferring {true} [k = 2] (7f x 6409t) ...                                     
    [%] Inferring {true} [k = 3] (7f x 6409t) ...                                     
    [?] Verifying [k = 3] --- (!((k > 1)) | (j > (2 + 1))) & ((1 = k) | !((j = ((2 + 1) + 1)))) & ((0 = k) | (k > 1) | (j = ((2 + 1) + 1)))                            
      [+] Added test ... [ 5, 2 ]

    [%] Removing conflicts ...  @2 @3 @4 @5
    [%] Inferring {true} [k = 1] (8f x 6410t) ...                                     
    [%] Inferring {true} [k = 2] (8f x 6410t) ...                                     
    [?] Verifying [k = 2] --- ((1 = k) | !((j = ((2 + 1) + 1)))) & (j > k) & (0 = (j % 2))                            
      [+] Added test ... [ 2, 1 ]

    [%] Inferring {true} [k = 1] (8f x 6411t) ...                                     
    [%] Inferring {true} [k = 2] (8f x 6411t) ...                                     
    [?] Verifying [k = 2] --- ((1 = k) | !((j = ((2 + 1) + 1)))) & (!((1 = k)) | (j = ((2 + 1) + 1))) & (0 = (j % 2))                            
      [+] Added test ... [ -2, -1 ]

    [%] Inferring {true} [k = 1] (8f x 6412t) ...                                     
    [%] Inferring {true} [k = 2] (8f x 6412t) ...                                     
    [?] Verifying [k = 2] --- ((1 = k) | !((j = ((2 + 1) + 1)))) & ((0 = k) | (j > (2 + 1))) & (0 = (j % 2))                            
      [+] Added test ... [ 6, 1 ]

    [%] Inferring {true} [k = 1] (8f x 6413t) ...                                     
    [%] Inferring {true} [k = 2] (8f x 6413t) ...                                     
    [?] Verifying [k = 2] --- ((1 = k) | !((j = ((2 + 1) + 1)))) & (j > k) & (!((1 = k)) | (j = ((2 + 1) + 1))) & (0 = (j % 2))                            
      [+] Added test ... [ -2, -3 ]

    [%] Inferring {true} [k = 1] (8f x 6414t) ...                                     
    [%] Inferring {true} [k = 2] (8f x 6414t) ...                                     
    [?] Verifying [k = 2] --- (!((1 = k)) | (j = ((2 + 1) + 1))) & ((1 = k) | !((j = ((2 + 1) + 1)))) & (0 = (j % 2)) & ((0 = k) | (j > (2 + 1)))                            
      [+] Added test ... [ 6, -1 ]

    [%] Inferring {true} [k = 1] (8f x 6415t) ...                                     
    [%] Inferring {true} [k = 2] (8f x 6415t) ...                                     
    [%] Inferring {true} [k = 3] (8f x 6415t) ...                                     
    [?] Verifying [k = 3] --- ((1 = k) | !((j = ((2 + 1) + 1)))) & (0 = (j % 2)) & ((0 = k) | (k > 1) | (j = ((2 + 1) + 1)))                            
      [+] Added test ... [ 2, 2 ]

    [%] Inferring {true} [k = 1] (8f x 6416t) ...                                     
    [%] Inferring {true} [k = 2] (8f x 6416t) ...                                     
    [%] Inferring {true} [k = 3] (8f x 6416t) ...                                     
    [?] Verifying [k = 3] --- ((1 = k) | !((j = ((2 + 1) + 1)))) & (j > k) & (0 = (j % 2)) & ((0 = k) | (k > 1) | (j = ((2 + 1) + 1)))                            
      [+] Added test ... [ 6, 3 ]

    [%] Removing conflicts ...  @2 @3 @4 @5
    [%] Inferring {true} [k = 1] (9f x 6417t) ...                                     
    [%] Inferring {true} [k = 2] (9f x 6417t) ...                                     
    [%] Inferring {true} [k = 3] (9f x 6417t) ...                                     
    [?] Verifying [k = 3] --- ((1 = k) | !((j = ((2 + 1) + 1)))) & (0 = (j % 2)) & (j > (k * 2)) & ((0 = k) | (k > 1) | (j = ((2 + 1) + 1)))                            
      [+] Added test ... [ 8, 2 ]

    [%] Removing conflicts ...  @2 @3 @4 @5 @6
    [%] Inferring {true} [k = 1] (10f x 6418t) ...                                     
    [%] Inferring {true} [k = 2] (10f x 6418t) ...                                     
    [?] Verifying [k = 2] --- ((0 = k) | (j = (2 * (k + 1))))                            

     - Result = ((0 = k) | (j = (2 * (k + 1))))

   # Loop_1 | Invariant @ Postcondition: ((0 = k) | (j = (2 * (k + 1))))

   # Loop_1 | Inductive Check: ((!((0 = k) | (j = (2 * (k + 1))))) | false | ((((0 = k) | ((j + 4) = (2 * (k + 1)))) | (!(flag != 0))) & (((0 = (k + 1)) | ((j + 2) = (2 * ((k + 1) + 1)))) | (flag != 0)))) is not valid!

   [Q2] Abduction query = ((!((0 = k) | (j = (2 * (k + 1))))) | false | ((((0 = k) | ((j + 4) = (2 * (k + 1)))) | (!(flag != 0))) & (((0 = (k + 1)) | ((j + 2) = (2 * ((k + 1) + 1)))) | (flag != 0))))
   [#] Simplified query: ((!((0 = k) | (j = (2 * (k + 1))))) | false | ((((0 = k) | ((j + 4) = (2 * (k + 1)))) | (!(flag != 0))) & (((0 = (k + 1)) | ((j + 2) = (2 * ((k + 1) + 1)))) | (flag != 0))))

    [%] Inferring {true} [k = 1] (0f x 6400t) ...                                     
    [?] Verifying [k = 1] --- true                            
      [+] Added test ... [ -1, 0, -1 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (2f x 6401t) ...                                     
    [%] Inferring {true} [k = 2] (2f x 6401t) ...                                     
    [?] Verifying [k = 2] --- ((0 = k) | (0 = flag))                            
      [+] Added test ... [ 0, 0, 0 ]

    [%] Inferring {true} [k = 1] (2f x 6402t) ...                                     
    [%] Inferring {true} [k = 2] (2f x 6402t) ...                                     
    [?] Verifying [k = 2] --- (!((0 = k)) | !((0 = flag))) & ((0 = k) | (0 = flag))                            

     - Result = (((!(0 = k)) | (!(0 = flag))) & ((0 = k) | (0 = flag)))

   # Loop_1 | Invariant @ Inductive Condition: ((((!(0 = k)) | (!(0 = flag))) & ((0 = k) | (0 = flag))) & ((0 = k) | (j = (2 * (k + 1)))))

   # Loop_1 | Inductive Check: ((!((((!(0 = k)) | (!(0 = flag))) & ((0 = k) | (0 = flag))) & ((0 = k) | (j = (2 * (k + 1)))))) | false | ((((((!(0 = k)) | (!(0 = flag))) & ((0 = k) | (0 = flag))) & ((0 = k) | ((j + 4) = (2 * (k + 1))))) | (!(flag != 0))) & (((((!(0 = (k + 1))) | (!(0 = flag))) & ((0 = (k + 1)) | (0 = flag))) & ((0 = (k + 1)) | ((j + 2) = (2 * ((k + 1) + 1))))) | (flag != 0)))) is not valid!

   [Q3] Abduction query = ((!((((!(0 = k)) | (!(0 = flag))) & ((0 = k) | (0 = flag))) & ((0 = k) | (j = (2 * (k + 1)))))) | false | ((((((!(0 = k)) | (!(0 = flag))) & ((0 = k) | (0 = flag))) & ((0 = k) | ((j + 4) = (2 * (k + 1))))) | (!(flag != 0))) & (((((!(0 = (k + 1))) | (!(0 = flag))) & ((0 = (k + 1)) | (0 = flag))) & ((0 = (k + 1)) | ((j + 2) = (2 * ((k + 1) + 1))))) | (flag != 0))))
   [#] Simplified query: ((!((((!(0 = k)) | (!(0 = flag))) & ((0 = k) | (0 = flag))) & ((0 = k) | (j = (2 * (k + 1)))))) | false | ((((((!(0 = k)) | (!(0 = flag))) & ((0 = k) | (0 = flag))) & ((0 = k) | ((j + 4) = (2 * (k + 1))))) | (!(flag != 0))) & (((((!(0 = (k + 1))) | (!(0 = flag))) & ((0 = (k + 1)) | (0 = flag))) & ((0 = (k + 1)) | ((j + 2) = (2 * ((k + 1) + 1))))) | (flag != 0))))

    [%] Inferring {true} [k = 1] (0f x 6400t) ...                                     
    [?] Verifying [k = 1] --- true                            
      [+] Added test ... [ -1, 0, 0 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (3f x 6401t) ...                                     
    [%] Inferring {true} [k = 2] (3f x 6401t) ...                                     
    [%] Inferring {true} [k = 3] (3f x 6401t) ...                                     
    [?] Verifying [k = 3] --- ((0 = k) | (j > 4) | (4 = j))                            

     - Result = (((0 = k) | (j > 4)) | (4 = j))

   # Loop_1 | Invariant @ Inductive Condition: ((((0 = k) | (j > 4)) | (4 = j)) & ((((!(0 = k)) | (!(0 = flag))) & ((0 = k) | (0 = flag))) & ((0 = k) | (j = (2 * (k + 1))))))

   # Loop_1 | Inductive Check: ((!((((0 = k) | (j > 4)) | (4 = j)) & ((((!(0 = k)) | (!(0 = flag))) & ((0 = k) | (0 = flag))) & ((0 = k) | (j = (2 * (k + 1))))))) | false | ((((((0 = k) | ((j + 4) > 4)) | (4 = (j + 4))) & ((((!(0 = k)) | (!(0 = flag))) & ((0 = k) | (0 = flag))) & ((0 = k) | ((j + 4) = (2 * (k + 1)))))) | (!(flag != 0))) & (((((0 = (k + 1)) | ((j + 2) > 4)) | (4 = (j + 2))) & ((((!(0 = (k + 1))) | (!(0 = flag))) & ((0 = (k + 1)) | (0 = flag))) & ((0 = (k + 1)) | ((j + 2) = (2 * ((k + 1) + 1)))))) | (flag != 0)))) is valid!

   # Precondition Check: ((((0 = 0) | (2 > 4)) | (4 = 2)) & ((((!(0 = 0)) | (!(0 = flag))) & ((0 = 0) | (0 = flag))) & ((0 = 0) | (2 = (2 * (0 + 1))))))    [+] Root state for counter-examples : {'k': '-', 'j': '-', 'flag': '0'}
 is not valid!

----------------------------------< RESTART >-----------------------------------

   + Found guard in B8 for loop #1

     - post_1 : (((true & (j = ((2 * k) + 2))) | (!(k != 0))) & (true | (k != 0)))
     - guard : NON-DETERMINISTIC

   [Q4] Abduction query = (false | (((true & (j = ((2 * k) + 2))) | (!(k != 0))) & (true | (k != 0))))
   [#] Simplified query: (false | (((true & (j = ((2 * k) + 2))) | (!(k != 0))) & (true | (k != 0))))

    [%] Inferring {true} [k = 1] (0f x 6452t) ...                                     
    [?] Verifying [k = 1] --- true                            
      [+] Added test ... [ -1, -1 ]

    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (1f x 6453t) ...                                     
    [?] Verifying [k = 1] --- (j > k)                            
      [+] Added test ... [ -1, -2 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (3f x 6454t) ...                                     
    [%] Inferring {true} [k = 2] (3f x 6454t) ...                                     
    [?] Verifying [k = 2] --- ((j > 2) | (2 = j))                            
      [+] Added test ... [ 3, -1 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (5f x 6455t) ...                                     
    [?] Verifying [k = 1] --- (0 <= k)                            
      [+] Added test ... [ 0, 1 ]

    [%] Inferring {true} [k = 1] (5f x 6456t) ...                                     
    [?] Verifying [k = 1] --- (j > k) & (0 <= k)                            
      [+] Added test ... [ 2, 1 ]

    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (6f x 6457t) ...                                     
    [%] Inferring {true} [k = 2] (6f x 6457t) ...                                     
    [?] Verifying [k = 2] --- (0 <= k) & ((j > 2) | (k = 0))                            
      [+] Added test ... [ 3, 1 ]

    [%] Removing conflicts ...  @2 @3 @4
    [%] Inferring {true} [k = 1] (7f x 6458t) ...                                     
    [%] Inferring {true} [k = 2] (7f x 6458t) ...                                     
    [?] Verifying [k = 2] --- ((k = 0) | (j > (2 + 1)))                            
      [+] Added test ... [ 4, -1 ]

    [%] Inferring {true} [k = 1] (7f x 6459t) ...                                     
    [%] Inferring {true} [k = 2] (7f x 6459t) ...                                     
    [?] Verifying [k = 2] --- (0 <= k) & ((k = 0) | (j > (2 + 1)))                            
      [+] Added test ... [ 5, 2 ]

    [%] Removing conflicts ...  @2 @3 @4 @5
    [%] Inferring {true} [k = 1] (8f x 6460t) ...                                     
    [%] Inferring {true} [k = 2] (8f x 6460t) ...                                     
    [?] Verifying [k = 2] --- (0 <= k) & (0 = (j % 2)) & ((k = 0) | (j > (2 + 1)))                            
      [+] Added test ... [ 4, 2 ]

    [%] Removing conflicts ...  @2 @3 @4 @5
    [%] Inferring {true} [k = 1] (9f x 6461t) ...                                     
    [%] Inferring {true} [k = 2] (9f x 6461t) ...                                     
    [?] Verifying [k = 2] --- (0 <= k) & (0 = (j % 2)) & ((k = 0) | (j > ((k + 1) + 1)))                            
      [+] Added test ... [ 6, 3 ]

    [%] Removing conflicts ...  @2 @3 @4
    [%] Removing conflicts ...  @2 @3 @4 @5
    [%] Inferring {true} [k = 1] (11f x 6462t) ...                                     
    [?] Verifying [k = 1] --- (0 <= k) & (j > (k * 2)) & (0 = (j % 2))                            
      [+] Added test ... [ 6, 1 ]

    [%] Removing conflicts ...  @2 @3 @4 @5 @6
    [%] Inferring {true} [k = 1] (12f x 6463t) ...                                     
    [%] Inferring {true} [k = 2] (12f x 6463t) ...                                     
    [?] Verifying [k = 2] --- ((k = 0) | (j = (2 * (k + 1))))                            

     - Result = ((k = 0) | (j = (2 * (k + 1))))

   # Loop_1 | Invariant @ Postcondition: ((k = 0) | (j = (2 * (k + 1))))

   # Loop_1 | Inductive Check: ((!((k = 0) | (j = (2 * (k + 1))))) | false | ((((k = 0) | ((j + 4) = (2 * (k + 1)))) | (!(flag != 0))) & ((((k + 1) = 0) | ((j + 2) = (2 * ((k + 1) + 1)))) | (flag != 0)))) is not valid!

   [Q5] Abduction query = ((!((k = 0) | (j = (2 * (k + 1))))) | false | ((((k = 0) | ((j + 4) = (2 * (k + 1)))) | (!(flag != 0))) & ((((k + 1) = 0) | ((j + 2) = (2 * ((k + 1) + 1)))) | (flag != 0))))
   [#] Simplified query: ((!((k = 0) | (j = (2 * (k + 1))))) | false | ((((k = 0) | ((j + 4) = (2 * (k + 1)))) | (!(flag != 0))) & ((((k + 1) = 0) | ((j + 2) = (2 * ((k + 1) + 1)))) | (flag != 0))))

    [%] Inferring {true} [k = 1] (0f x 6452t) ...                                     
    [?] Verifying [k = 1] --- true                            
      [+] Added test ... [ -1, 0, -1 ]

    [%] Removing conflicts ...  @2 @3
    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (2f x 6453t) ...                                     
    [%] Inferring {true} [k = 2] (2f x 6453t) ...                                     
    [?] Verifying [k = 2] --- ((0 = flag) | (0 = k))                            
      [+] Added test ... [ 0, 0, 0 ]

    [%] Removing conflicts ...  @2 @3
    [%] Inferring {true} [k = 1] (3f x 6454t) ...                                     
    [%] Inferring {true} [k = 2] (3f x 6454t) ...                                     
    [%] Inferring {true} [k = 3] (3f x 6454t) ...                                     
    [?] Verifying [k = 3] --- (!((0 = flag)) | !((0 = k)) | (2 = j)) & ((0 = flag) | (0 = k))                            

     - Result = ((((!(0 = flag)) | (!(0 = k))) | (2 = j)) & ((0 = flag) | (0 = k)))

   # Loop_1 | Invariant @ Inductive Condition: (((((!(0 = flag)) | (!(0 = k))) | (2 = j)) & ((0 = flag) | (0 = k))) & ((k = 0) | (j = (2 * (k + 1)))))

   # Loop_1 | Inductive Check: ((!(((((!(0 = flag)) | (!(0 = k))) | (2 = j)) & ((0 = flag) | (0 = k))) & ((k = 0) | (j = (2 * (k + 1)))))) | false | (((((((!(0 = flag)) | (!(0 = k))) | (2 = (j + 4))) & ((0 = flag) | (0 = k))) & ((k = 0) | ((j + 4) = (2 * (k + 1))))) | (!(flag != 0))) & ((((((!(0 = flag)) | (!(0 = (k + 1)))) | (2 = (j + 2))) & ((0 = flag) | (0 = (k + 1)))) & (((k + 1) = 0) | ((j + 2) = (2 * ((k + 1) + 1))))) | (flag != 0)))) is valid!

   # Precondition Check: (((((!(0 = flag)) | (!(0 = 0))) | (2 = 2)) & ((0 = flag) | (0 = 0))) & ((0 = 0) | (2 = (2 * (0 + 1))))) is valid!


[###] Final invariants: [###]
Loop #1: (((((!(0 = flag)) | (!(0 = k))) | (2 = j)) & ((0 = flag) | (0 = k))) & ((k = 0) | (j = (2 * (k + 1)))))
================================================================================
checker_exec.sh: line 1: 26786 Aborted                 (core dumped) bin/pinvgen -wpath /home/saswat/Repos/PIE/logs/limit_8gb/6400/pie/16/13.cpp -abducer /home/saswat/Repos/PIE/abducer/abduce.sh -tool=pie -csize 16 --extra-arg=--std=c++11 ../../PIE/bm_oopsla/13.cpp --

real	0m53.522s
user	0m49.160s
sys	0m1.168s


--- Processed 13.cpp ---
sat: 38
unsat: 8
unk: 0
escher: 30

[$] OOM Count = 0
[$] MAX Usage = 143
