
=== (0) List.length(l) ===

[S]ynthesized feaures = 0

precondition: false
postcondition: exception thrown

real	0m0.006s
user	0m0.004s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (0) List.length(l) ===

[S]ynthesized feaures = 1

precondition: (l = [])
postcondition: (res = 0)

real	0m0.034s
user	0m0.008s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (1) List.hd(l) ===

[S]ynthesized feaures = 1

precondition: (l = [])
postcondition: exception thrown

real	0m0.009s
user	0m0.008s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (2) List.tl(l) ===

[S]ynthesized feaures = 1

precondition: (l = [])
postcondition: exception thrown

real	0m0.009s
user	0m0.004s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (2) List.tl(l) ===

[S]ynthesized feaures = 1

precondition: (tl(l) = [])
postcondition: res = []

real	0m0.046s
user	0m0.004s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (3) List.nth(l, n) ===

[S]ynthesized feaures = 1

precondition: ((0 > n) | (len(l) <= n))
postcondition: exception thrown

real	0m0.385s
user	0m0.380s
sys	0m0.004s

[M]ax Memory Usage = 32

[V]erdict = GOOD

=== (4) List.rev(l) ===

[S]ynthesized feaures = 0

precondition: false
postcondition: exception thrown

real	0m0.007s
user	0m0.004s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (4) List.rev(l) ===

[S]ynthesized feaures = 1

precondition: (l = [])
postcondition: res = []

real	0m0.010s
user	0m0.008s
sys	0m0.000s

[M]ax Memory Usage = 5

[V]erdict = GOOD

=== (5) List.append(l0, l1) ===

[S]ynthesized feaures = 0

precondition: false
postcondition: exception thrown

real	0m0.009s
user	0m0.004s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (5) List.append(l0, l1) ===

[S]ynthesized feaures = 2

precondition: (l0 = l1) && (l1 = [])
postcondition: res = []

real	0m0.037s
user	0m0.016s
sys	0m0.000s

[M]ax Memory Usage = 6

[V]erdict = GOOD

=== (6) List.rev_append(l0, l1) ===

[S]ynthesized feaures = 0

precondition: false
postcondition: exception thrown

real	0m0.009s
user	0m0.004s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (6) List.rev_append(l0, l1) ===

[S]ynthesized feaures = 2

precondition: (l0 = l1) && (l1 = [])
postcondition: res = []

real	0m0.037s
user	0m0.016s
sys	0m0.000s

[M]ax Memory Usage = 6

[V]erdict = GOOD

=== (7) List.concat(l) ===

[S]ynthesized feaures = 0

precondition: false
postcondition: exception thrown

real	0m0.009s
user	0m0.008s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (7) List.concat(l) ===

[M]ax Memory Usage = 4676

[V]erdict = FAIL

=== (8) List.flatten(l) ===

[S]ynthesized feaures = 0

precondition: false
postcondition: exception thrown

real	0m0.009s
user	0m0.008s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (8) List.flatten(l) ===

[M]ax Memory Usage = 4282

[V]erdict = FAIL

=== (9) List.mem(m, l) ===

[S]ynthesized feaures = 0

precondition: false
postcondition: exception thrown

real	0m0.008s
user	0m0.004s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (9) List.mem(m, l) ===

[S]ynthesized feaures = 1

precondition: !(m in l)
postcondition: (res = false)

real	0m0.012s
user	0m0.008s
sys	0m0.000s

[M]ax Memory Usage = 5

[V]erdict = GOOD

=== (10) List.memq(m, l) ===

[S]ynthesized feaures = 0

precondition: false
postcondition: exception thrown

real	0m0.008s
user	0m0.004s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (10) List.memq(m, l) ===

[S]ynthesized feaures = 1

precondition: !(m in l)
postcondition: (res = false)

real	0m0.011s
user	0m0.008s
sys	0m0.000s

[M]ax Memory Usage = 5

[V]erdict = BAD

=== (11) List.split(l) ===

[S]ynthesized feaures = 0

precondition: false
postcondition: exception thrown

real	0m0.008s
user	0m0.004s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (12) List.combine(l0, l1) ===

[S]ynthesized feaures = 1

precondition: (! (len(l1) = len(l0)))
postcondition: exception thrown

real	0m0.031s
user	0m0.028s
sys	0m0.000s

[M]ax Memory Usage = 8

[V]erdict = GOOD

=== (12) List.combine(l0, l1) ===

[S]ynthesized feaures = 1

precondition: (l1 = [])
postcondition: res = []

real	0m0.036s
user	0m0.000s
sys	0m0.004s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (13) List.assoc(a, l) ===

[M]ax Memory Usage = 4930

[V]erdict = FAIL

=== (14) List.assq(a, l) ===

[M]ax Memory Usage = 4481

[V]erdict = FAIL

=== (15) List.mem_assoc(a, l) ===

[S]ynthesized feaures = 0

precondition: false
postcondition: exception thrown

real	0m0.009s
user	0m0.008s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (15) List.mem_assoc(a, l) ===

[M]ax Memory Usage = 5267

[V]erdict = FAIL

=== (16) List.mem_assq(a, l) ===

[S]ynthesized feaures = 0

precondition: false
postcondition: exception thrown

real	0m0.009s
user	0m0.004s
sys	0m0.004s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (16) List.mem_assq(a, l) ===

[M]ax Memory Usage = 5182

[V]erdict = FAIL

=== (17) List.remove_assoc(a, l) ===

[S]ynthesized feaures = 0

precondition: false
postcondition: exception thrown

real	0m0.009s
user	0m0.004s
sys	0m0.004s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (17) List.remove_assoc(a, l) ===

[M]ax Memory Usage = 4365

[V]erdict = FAIL

=== (18) List.remove_assq(a, l) ===

[S]ynthesized feaures = 0

precondition: false
postcondition: exception thrown

real	0m0.010s
user	0m0.008s
sys	0m0.000s

[M]ax Memory Usage = 4

[V]erdict = GOOD

=== (18) List.remove_assq(a, l) ===

[M]ax Memory Usage = 4706

[V]erdict = FAIL

