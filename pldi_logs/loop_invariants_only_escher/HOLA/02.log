 ==>
704 tests for loop #1.

(*) Checking loop invariant:
================================================================================
[#] Starting Loop Invariant Generation ...

   + Found guard in B6 for loop #1

     - post_1 : (true & (x = y))
     - guard : NON-DETERMINISTIC

   [Q1] Abduction query = (false | (true & (x = y)))
   [#] Simplified query: (false | (true & (x = y)))

    [*] Synthesizing --- 
    [?] Verifying --- true                            
      [+] Added test ... [ 0, -1 ]

    [*] Synthesizing ---  @2 @3
    [?] Verifying --- (x = y)                            

     - Result = (x = y)

   # Loop_1 | Invariant @ Postcondition: (x = y)

   # Loop_1 | Inductive Check: ((!(x = y)) | false | ((((x + 1) = (y + 1)) | (!(((z + ((x + y) + w)) % 2) = 1))) & ((x = (y + 1)) | (((z + ((x + y) + w)) % 2) = 1)))) is not valid!

   [Q2] Abduction query = ((!(x = y)) | false | ((((x + 1) = (y + 1)) | (!(((z + ((x + y) + w)) % 2) = 1))) & ((x = (y + 1)) | (((z + ((x + y) + w)) % 2) = 1))))
   [#] Simplified query: ((!(x = y)) | false | ((((x + 1) = (y + 1)) | (!(((z + ((x + y) + w)) % 2) = 1))) & ((x = (y + 1)) | (((z + ((x + y) + w)) % 2) = 1))))

    [*] Synthesizing --- 
    [?] Verifying --- true                            
      [+] Added test ... [ 0, 0, 0, 0 ]

    [*] Synthesizing ---  @2 @3
    [?] Verifying --- (z > 0)                            
      [+] Added test ... [ 0, 0, 1, -1 ]

    [*] Synthesizing ---  @2 @3 @4 @5
    [?] Verifying --- (z > (w % 2))                            
      [+] Added test ... [ -1, -1, 2, 0 ]

    [*] Synthesizing ---  @2 @3 @4 @5 @6
    [?] Verifying --- (((z + 1) % 2) <= w)                            
      [+] Added test ... [ -1, -1, 0, 2 ]

    [*] Synthesizing ---  @2 @3 @4 @5 @6 @7
    [?] Verifying --- (1 = ((w + z) % 2))                            

     - Result = (1 = ((w + z) % 2))

   # Loop_1 | Invariant @ Inductive Condition: ((1 = ((w + z) % 2)) & (x = y))

   # Loop_1 | Inductive Check: ((!((1 = ((w + z) % 2)) & (x = y))) | false | ((((1 = (((w + 2) + (z + ((x + y) + w))) % 2)) & ((x + 1) = (y + 1))) | (!(((z + ((x + y) + w)) % 2) = 1))) & (((1 = (((w + 2) + (z + ((x + y) + w))) % 2)) & (x = (y + 1))) | (((z + ((x + y) + w)) % 2) = 1)))) is not valid!

   [Q3] Abduction query = ((!((1 = ((w + z) % 2)) & (x = y))) | false | ((((1 = (((w + 2) + (z + ((x + y) + w))) % 2)) & ((x + 1) = (y + 1))) | (!(((z + ((x + y) + w)) % 2) = 1))) & (((1 = (((w + 2) + (z + ((x + y) + w))) % 2)) & (x = (y + 1))) | (((z + ((x + y) + w)) % 2) = 1))))
   [#] Simplified query: ((!((1 = ((w + z) % 2)) & (x = y))) | false | ((((1 = (((w + 2) + (z + ((x + y) + w))) % 2)) & ((x + 1) = (y + 1))) | (!(((z + ((x + y) + w)) % 2) = 1))) & (((1 = (((w + 2) + (z + ((x + y) + w))) % 2)) & (x = (y + 1))) | (((z + ((x + y) + w)) % 2) = 1))))

    [*] Synthesizing --- 
    [?] Verifying --- true                            
      [+] Added test ... [ -1, 0, 0, 0 ]

    [*] Synthesizing ---  @2 @3
    [?] Verifying --- (z > 0)                            
      [+] Added test ... [ 1, 2, -2, -2 ]

    [*] Synthesizing ---  @2 @3 @4 @5
    [?] Verifying --- (1 = (z % 2))                            

     - Result = (1 = (z % 2))

   # Loop_1 | Invariant @ Inductive Condition: ((1 = (z % 2)) & ((1 = ((w + z) % 2)) & (x = y)))

   # Loop_1 | Inductive Check: ((!((1 = (z % 2)) & ((1 = ((w + z) % 2)) & (x = y)))) | false | ((((1 = ((z + ((x + y) + w)) % 2)) & ((1 = (((w + 2) + (z + ((x + y) + w))) % 2)) & ((x + 1) = (y + 1)))) | (!(((z + ((x + y) + w)) % 2) = 1))) & (((1 = ((z + ((x + y) + w)) % 2)) & ((1 = (((w + 2) + (z + ((x + y) + w))) % 2)) & (x = (y + 1)))) | (((z + ((x + y) + w)) % 2) = 1)))) is valid!

   # Precondition Check: ((1 = ((1 - 0) % 2)) & ((1 = ((0 + (1 - 0)) % 2)) & (0 = 0))) is valid!


[###] Final invariants: [###]
Loop #1: ((1 = (z % 2)) & ((1 = ((w + z) % 2)) & (x = y)))
================================================================================
checker_exec.sh: line 1: 18094 Aborted                 (core dumped) bin/pinvgen -wpath /home/saswat/Repos/PIE/logs/limit_8gb/6400/escher/all/02.cpp -abducer /home/saswat/Repos/PIE/abducer/abduce.sh -tool=escher -csize all --extra-arg=--std=c++11 /home/saswat/Repos/PIE/abducer/../bm_hola/02.cpp --

real	0m58.156s
user	0m55.276s
sys	0m0.628s


--- Processed 02.cpp ---
sat: 9
unsat: 5
unk: 0
escher: 10

[$] OOM Count = 0
[$] MAX Usage = 354
