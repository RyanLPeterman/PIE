 ==>
6400 tests for loop #1.
6400 tests for loop #2.
6400 tests for loop #3.

(*) Checking loop invariant:
================================================================================
[#] Starting Loop Invariant Generation ...

   + Found guard in B14 for loop #1

     - post_1 : (true & (x = y))
     - guard : NON-DETERMINISTIC

   [Q1] Abduction query = (false | (true & (x = y)))
   [#] Simplified query: (false | (true & (x = y)))

    [*] Synthesizing --- 
    [?] Verifying --- true                            
      [+] Added test ... [ 0, -1 ]

    [*] Synthesizing ---  @2 @3
    [?] Verifying --- (x = y)                            

     - Result = (x = y)

   # Loop_1 | Invariant @ Postcondition: (x = y)

   + Found guard in B6 for loop #3

     - post_3 : (x = y)
     - guard : NON-DETERMINISTIC

   [Q2] Abduction query = (false | (x = y))
   [#] Simplified query: (false | (x = y))

    [*] Synthesizing --- 
    [?] Verifying --- true                            
      [+] Added test ... [ 0, -1 ]

    [*] Synthesizing ---  @2 @3
    [?] Verifying --- (x = y)                            

     - Result = (x = y)

   # Loop_3 | Invariant @ Postcondition: (x = y)

   # Loop_3 | Inductive Check: ((!(x = y)) | false | ((x - 1) = (y - 1))) is valid!

   + Found guard in B12 for loop #2

     - post_2 : (x = y)
     - guard : NON-DETERMINISTIC

   [Q3] Abduction query = (false | (x = y))
   [#] Simplified query: (false | (x = y))

    [*] Synthesizing --- 
    [?] Verifying --- true                            
      [+] Added test ... [ 0, -1 ]

    [*] Synthesizing ---  @2 @3
    [?] Verifying --- (x = y)                            

     - Result = (x = y)

   # Loop_2 | Invariant @ Postcondition: (x = y)

   # Loop_2 | Inductive Check: ((!(x = y)) | false | ((((x + 1) = (y + 1)) | (!(z = ((k + y) - c)))) & (((x + 1) = (y - 1)) | (z = ((k + y) - c))))) is not valid!

   [Q4] Abduction query = ((!(x = y)) | false | ((((x + 1) = (y + 1)) | (!(z = ((k + y) - c)))) & (((x + 1) = (y - 1)) | (z = ((k + y) - c)))))
   [#] Simplified query: ((!(x = y)) | false | ((((x + 1) = (y + 1)) | (!(z = ((k + y) - c)))) & (((x + 1) = (y - 1)) | (z = ((k + y) - c)))))

    [*] Synthesizing ---  @2 @3 @4 @5
    [?] Verifying --- (z <= (y + k))                            
      [+] Added test ... [ 0, 0, 0, 0, -1 ]

    [*] Synthesizing ---  @2 @3 @4 @5 @6 @7
    [?] Verifying --- ((k > 0) | (y > z))                            
      [+] Added test ... [ 0, 0, 0, 1, 0 ]

    [*] Synthesizing ---  @2 @3 @4 @5 @6 @7
    [?] Verifying --- (k = (z - (y - c)))                            

     - Result = (k = (z - (y - c)))

   # Loop_2 | Invariant @ Inductive Condition: ((k = (z - (y - c))) & (x = y))

   # Loop_2 | Inductive Check: ((!((k = (z - (y - c))) & (x = y))) | false | ((((k = (z - ((y + 1) - (c + 1)))) & ((x + 1) = (y + 1))) | (!(z = ((k + y) - c)))) & (((k = (z - ((y - 1) - (c + 1)))) & ((x + 1) = (y - 1))) | (z = ((k + y) - c))))) is valid!

   # Loop_1 | Inductive Check: ((!(x = y)) | false | ((k = (z - (y - 0))) & (x = y))) is not valid!

   [Q5] Abduction query = ((!(x = y)) | false | ((k = (z - (y - 0))) & (x = y)))
   [#] Simplified query: ((!(x = y)) | false | ((k = (z - (y - 0))) & (x = y)))

    [*] Synthesizing ---  @2 @3 @4 @5
    [?] Verifying --- (y = (z - k))                            

     - Result = (y = (z - k))

   # Loop_1 | Invariant @ Inductive Condition: ((y = (z - k)) & (x = y))

   + Found guard in B6 for loop #3

     - post_3 : ((y = ((k + y) - k)) & (x = y))
     - guard : NON-DETERMINISTIC

   [Q6] Abduction query = (false | ((y = ((k + y) - k)) & (x = y)))
   [#] Simplified query: (false | ((y = ((k + y) - k)) & (x = y)))

    [*] Synthesizing --- 
    [?] Verifying --- true                            
      [+] Added test ... [ -1, 0, 0 ]

    [*] Synthesizing ---  @2 @3
    [?] Verifying --- (x = y)                            

     - Result = (x = y)

   # Loop_3 | Invariant @ Postcondition: (x = y)

   # Loop_3 | Inductive Check: ((!(x = y)) | false | ((x - 1) = (y - 1))) is valid!

   + Found guard in B12 for loop #2

     - post_2 : (x = y)
     - guard : NON-DETERMINISTIC

   [Q7] Abduction query = (false | (x = y))
   [#] Simplified query: (false | (x = y))

    [*] Synthesizing --- 
    [?] Verifying --- true                            
      [+] Added test ... [ 0, -1 ]

    [*] Synthesizing ---  @2 @3
    [?] Verifying --- (x = y)                            

     - Result = (x = y)

   # Loop_2 | Invariant @ Postcondition: (x = y)

   # Loop_2 | Inductive Check: ((!(x = y)) | false | ((((x + 1) = (y + 1)) | (!(z = ((k + y) - c)))) & (((x + 1) = (y - 1)) | (z = ((k + y) - c))))) is not valid!

   [Q8] Abduction query = ((!(x = y)) | false | ((((x + 1) = (y + 1)) | (!(z = ((k + y) - c)))) & (((x + 1) = (y - 1)) | (z = ((k + y) - c)))))
   [#] Simplified query: ((!(x = y)) | false | ((((x + 1) = (y + 1)) | (!(z = ((k + y) - c)))) & (((x + 1) = (y - 1)) | (z = ((k + y) - c)))))

    [*] Synthesizing ---  @2 @3 @4 @5
    [?] Verifying --- (z <= (y + k))                            
      [+] Added test ... [ 0, 0, 0, 0, -1 ]

    [*] Synthesizing ---  @2 @3 @4 @5 @6 @7
    [?] Verifying --- ((k > 0) | (y > z))                            
      [+] Added test ... [ 0, 0, 0, 1, 0 ]

    [*] Synthesizing ---  @2 @3 @4 @5 @6 @7
    [?] Verifying --- (k = (z - (y - c)))                            

     - Result = (k = (z - (y - c)))

   # Loop_2 | Invariant @ Inductive Condition: ((k = (z - (y - c))) & (x = y))

   # Loop_2 | Inductive Check: ((!((k = (z - (y - c))) & (x = y))) | false | ((((k = (z - ((y + 1) - (c + 1)))) & ((x + 1) = (y + 1))) | (!(z = ((k + y) - c)))) & (((k = (z - ((y - 1) - (c + 1)))) & ((x + 1) = (y - 1))) | (z = ((k + y) - c))))) is valid!

   # Loop_1 | Inductive Check: ((!((y = (z - k)) & (x = y))) | false | ((k = (z - (y - 0))) & (x = y))) is valid!

   # Precondition Check: ((0 = (k - k)) & (0 = 0)) is valid!


[###] Final invariants: [###]
Loop #1: ((y = (z - k)) & (x = y))
Loop #2: ((k = (z - (y - c))) & (x = y))
Loop #3: (x = y)
================================================================================
checker_exec.sh: line 1:  2723 Aborted                 (core dumped) bin/pinvgen -wpath /home/saswat/Repos/PIE/logs/limit_8gb/6400/escher/all/33.cpp -abducer /home/saswat/Repos/PIE/abducer/abduce.sh -tool=escher -csize all --extra-arg=--std=c++11 /home/saswat/Repos/PIE/abducer/../bm_hola/33.cpp --

real	19m13.523s
user	19m3.764s
sys	0m5.980s


--- Processed 33.cpp ---
sat: 12
unsat: 14
unk: 0
escher: 17

[$] OOM Count = 0
[$] MAX Usage = 4507
